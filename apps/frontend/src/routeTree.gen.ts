/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ServiciosImport } from './routes/servicios'
import { Route as IndexImport } from './routes/index'
import { Route as InmueblesIndexImport } from './routes/inmuebles/index'
import { Route as InmueblesIdImport } from './routes/inmuebles/$id'
import { Route as DashAuthenticatedImport } from './routes/dash/_authenticated'
import { Route as DashauthenticatedIndexImport } from './routes/dash/ _authenticated/index'
import { Route as DashauthenticatedDocsNuevoImport } from './routes/dash/ _authenticated/docs/nuevo'
import { Route as DashauthenticatedDocsListarImport } from './routes/dash/ _authenticated/docs/listar'
import { Route as DashauthenticatedDocsEditarIdImport } from './routes/dash/ _authenticated/docs/editar/$id'

// Create Virtual Routes

const DashImport = createFileRoute('/dash')()

// Create/Update Routes

const DashRoute = DashImport.update({
  id: '/dash',
  path: '/dash',
  getParentRoute: () => rootRoute,
} as any)

const ServiciosRoute = ServiciosImport.update({
  id: '/servicios',
  path: '/servicios',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const InmueblesIndexRoute = InmueblesIndexImport.update({
  id: '/inmuebles/',
  path: '/inmuebles/',
  getParentRoute: () => rootRoute,
} as any)

const InmueblesIdRoute = InmueblesIdImport.update({
  id: '/inmuebles/$id',
  path: '/inmuebles/$id',
  getParentRoute: () => rootRoute,
} as any)

const DashAuthenticatedRoute = DashAuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => DashRoute,
} as any)

const DashauthenticatedIndexRoute = DashauthenticatedIndexImport.update({
  id: '/ _authenticated/',
  path: '/ _authenticated/',
  getParentRoute: () => DashRoute,
} as any)

const DashauthenticatedDocsNuevoRoute = DashauthenticatedDocsNuevoImport.update(
  {
    id: '/ _authenticated/docs/nuevo',
    path: '/ _authenticated/docs/nuevo',
    getParentRoute: () => DashRoute,
  } as any,
)

const DashauthenticatedDocsListarRoute =
  DashauthenticatedDocsListarImport.update({
    id: '/ _authenticated/docs/listar',
    path: '/ _authenticated/docs/listar',
    getParentRoute: () => DashRoute,
  } as any)

const DashauthenticatedDocsEditarIdRoute =
  DashauthenticatedDocsEditarIdImport.update({
    id: '/ _authenticated/docs/editar/$id',
    path: '/ _authenticated/docs/editar/$id',
    getParentRoute: () => DashRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/servicios': {
      id: '/servicios'
      path: '/servicios'
      fullPath: '/servicios'
      preLoaderRoute: typeof ServiciosImport
      parentRoute: typeof rootRoute
    }
    '/dash': {
      id: '/dash'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashImport
      parentRoute: typeof rootRoute
    }
    '/dash/_authenticated': {
      id: '/dash/_authenticated'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashAuthenticatedImport
      parentRoute: typeof DashRoute
    }
    '/inmuebles/$id': {
      id: '/inmuebles/$id'
      path: '/inmuebles/$id'
      fullPath: '/inmuebles/$id'
      preLoaderRoute: typeof InmueblesIdImport
      parentRoute: typeof rootRoute
    }
    '/inmuebles/': {
      id: '/inmuebles/'
      path: '/inmuebles'
      fullPath: '/inmuebles'
      preLoaderRoute: typeof InmueblesIndexImport
      parentRoute: typeof rootRoute
    }
    '/dash/ _authenticated/': {
      id: '/dash/ _authenticated/'
      path: '/ _authenticated'
      fullPath: '/dash/ _authenticated'
      preLoaderRoute: typeof DashauthenticatedIndexImport
      parentRoute: typeof DashImport
    }
    '/dash/ _authenticated/docs/listar': {
      id: '/dash/ _authenticated/docs/listar'
      path: '/ _authenticated/docs/listar'
      fullPath: '/dash/ _authenticated/docs/listar'
      preLoaderRoute: typeof DashauthenticatedDocsListarImport
      parentRoute: typeof DashImport
    }
    '/dash/ _authenticated/docs/nuevo': {
      id: '/dash/ _authenticated/docs/nuevo'
      path: '/ _authenticated/docs/nuevo'
      fullPath: '/dash/ _authenticated/docs/nuevo'
      preLoaderRoute: typeof DashauthenticatedDocsNuevoImport
      parentRoute: typeof DashImport
    }
    '/dash/ _authenticated/docs/editar/$id': {
      id: '/dash/ _authenticated/docs/editar/$id'
      path: '/ _authenticated/docs/editar/$id'
      fullPath: '/dash/ _authenticated/docs/editar/$id'
      preLoaderRoute: typeof DashauthenticatedDocsEditarIdImport
      parentRoute: typeof DashImport
    }
  }
}

// Create and export the route tree

interface DashRouteChildren {
  DashAuthenticatedRoute: typeof DashAuthenticatedRoute
  DashauthenticatedIndexRoute: typeof DashauthenticatedIndexRoute
  DashauthenticatedDocsListarRoute: typeof DashauthenticatedDocsListarRoute
  DashauthenticatedDocsNuevoRoute: typeof DashauthenticatedDocsNuevoRoute
  DashauthenticatedDocsEditarIdRoute: typeof DashauthenticatedDocsEditarIdRoute
}

const DashRouteChildren: DashRouteChildren = {
  DashAuthenticatedRoute: DashAuthenticatedRoute,
  DashauthenticatedIndexRoute: DashauthenticatedIndexRoute,
  DashauthenticatedDocsListarRoute: DashauthenticatedDocsListarRoute,
  DashauthenticatedDocsNuevoRoute: DashauthenticatedDocsNuevoRoute,
  DashauthenticatedDocsEditarIdRoute: DashauthenticatedDocsEditarIdRoute,
}

const DashRouteWithChildren = DashRoute._addFileChildren(DashRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/servicios': typeof ServiciosRoute
  '/dash': typeof DashAuthenticatedRoute
  '/inmuebles/$id': typeof InmueblesIdRoute
  '/inmuebles': typeof InmueblesIndexRoute
  '/dash/ _authenticated': typeof DashauthenticatedIndexRoute
  '/dash/ _authenticated/docs/listar': typeof DashauthenticatedDocsListarRoute
  '/dash/ _authenticated/docs/nuevo': typeof DashauthenticatedDocsNuevoRoute
  '/dash/ _authenticated/docs/editar/$id': typeof DashauthenticatedDocsEditarIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/servicios': typeof ServiciosRoute
  '/dash': typeof DashAuthenticatedRoute
  '/inmuebles/$id': typeof InmueblesIdRoute
  '/inmuebles': typeof InmueblesIndexRoute
  '/dash/ _authenticated': typeof DashauthenticatedIndexRoute
  '/dash/ _authenticated/docs/listar': typeof DashauthenticatedDocsListarRoute
  '/dash/ _authenticated/docs/nuevo': typeof DashauthenticatedDocsNuevoRoute
  '/dash/ _authenticated/docs/editar/$id': typeof DashauthenticatedDocsEditarIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/servicios': typeof ServiciosRoute
  '/dash': typeof DashRouteWithChildren
  '/dash/_authenticated': typeof DashAuthenticatedRoute
  '/inmuebles/$id': typeof InmueblesIdRoute
  '/inmuebles/': typeof InmueblesIndexRoute
  '/dash/ _authenticated/': typeof DashauthenticatedIndexRoute
  '/dash/ _authenticated/docs/listar': typeof DashauthenticatedDocsListarRoute
  '/dash/ _authenticated/docs/nuevo': typeof DashauthenticatedDocsNuevoRoute
  '/dash/ _authenticated/docs/editar/$id': typeof DashauthenticatedDocsEditarIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/servicios'
    | '/dash'
    | '/inmuebles/$id'
    | '/inmuebles'
    | '/dash/ _authenticated'
    | '/dash/ _authenticated/docs/listar'
    | '/dash/ _authenticated/docs/nuevo'
    | '/dash/ _authenticated/docs/editar/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/servicios'
    | '/dash'
    | '/inmuebles/$id'
    | '/inmuebles'
    | '/dash/ _authenticated'
    | '/dash/ _authenticated/docs/listar'
    | '/dash/ _authenticated/docs/nuevo'
    | '/dash/ _authenticated/docs/editar/$id'
  id:
    | '__root__'
    | '/'
    | '/servicios'
    | '/dash'
    | '/dash/_authenticated'
    | '/inmuebles/$id'
    | '/inmuebles/'
    | '/dash/ _authenticated/'
    | '/dash/ _authenticated/docs/listar'
    | '/dash/ _authenticated/docs/nuevo'
    | '/dash/ _authenticated/docs/editar/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ServiciosRoute: typeof ServiciosRoute
  DashRoute: typeof DashRouteWithChildren
  InmueblesIdRoute: typeof InmueblesIdRoute
  InmueblesIndexRoute: typeof InmueblesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ServiciosRoute: ServiciosRoute,
  DashRoute: DashRouteWithChildren,
  InmueblesIdRoute: InmueblesIdRoute,
  InmueblesIndexRoute: InmueblesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/servicios",
        "/dash",
        "/inmuebles/$id",
        "/inmuebles/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/servicios": {
      "filePath": "servicios.tsx"
    },
    "/dash": {
      "filePath": "dash",
      "children": [
        "/dash/_authenticated",
        "/dash/ _authenticated/",
        "/dash/ _authenticated/docs/listar",
        "/dash/ _authenticated/docs/nuevo",
        "/dash/ _authenticated/docs/editar/$id"
      ]
    },
    "/dash/_authenticated": {
      "filePath": "dash/_authenticated.tsx",
      "parent": "/dash"
    },
    "/inmuebles/$id": {
      "filePath": "inmuebles/$id.tsx"
    },
    "/inmuebles/": {
      "filePath": "inmuebles/index.tsx"
    },
    "/dash/ _authenticated/": {
      "filePath": "dash/ _authenticated/index.tsx",
      "parent": "/dash"
    },
    "/dash/ _authenticated/docs/listar": {
      "filePath": "dash/ _authenticated/docs/listar.tsx",
      "parent": "/dash"
    },
    "/dash/ _authenticated/docs/nuevo": {
      "filePath": "dash/ _authenticated/docs/nuevo.tsx",
      "parent": "/dash"
    },
    "/dash/ _authenticated/docs/editar/$id": {
      "filePath": "dash/ _authenticated/docs/editar/$id.tsx",
      "parent": "/dash"
    }
  }
}
ROUTE_MANIFEST_END */
