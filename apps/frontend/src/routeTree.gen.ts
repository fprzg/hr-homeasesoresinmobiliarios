/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ServiciosImport } from './routes/servicios'
import { Route as IndexImport } from './routes/index'
import { Route as InmueblesIndexImport } from './routes/inmuebles/index'
import { Route as DashIndexImport } from './routes/dash/index'
import { Route as InmueblesIdImport } from './routes/inmuebles/$id'
import { Route as DashLoginImport } from './routes/dash/login'
import { Route as DashAuthenticatedImport } from './routes/dash/_authenticated'
import { Route as DashAuthenticatedInmueblesIndexImport } from './routes/dash/_authenticated/inmuebles/index'
import { Route as DashAuthenticatedInmueblesIdImport } from './routes/dash/_authenticated/inmuebles/$id'

// Create Virtual Routes

const DashImport = createFileRoute('/dash')()

// Create/Update Routes

const DashRoute = DashImport.update({
  id: '/dash',
  path: '/dash',
  getParentRoute: () => rootRoute,
} as any)

const ServiciosRoute = ServiciosImport.update({
  id: '/servicios',
  path: '/servicios',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const InmueblesIndexRoute = InmueblesIndexImport.update({
  id: '/inmuebles/',
  path: '/inmuebles/',
  getParentRoute: () => rootRoute,
} as any)

const DashIndexRoute = DashIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashRoute,
} as any)

const InmueblesIdRoute = InmueblesIdImport.update({
  id: '/inmuebles/$id',
  path: '/inmuebles/$id',
  getParentRoute: () => rootRoute,
} as any)

const DashLoginRoute = DashLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => DashRoute,
} as any)

const DashAuthenticatedRoute = DashAuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => DashRoute,
} as any)

const DashAuthenticatedInmueblesIndexRoute =
  DashAuthenticatedInmueblesIndexImport.update({
    id: '/inmuebles/',
    path: '/inmuebles/',
    getParentRoute: () => DashAuthenticatedRoute,
  } as any)

const DashAuthenticatedInmueblesIdRoute =
  DashAuthenticatedInmueblesIdImport.update({
    id: '/inmuebles/$id',
    path: '/inmuebles/$id',
    getParentRoute: () => DashAuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/servicios': {
      id: '/servicios'
      path: '/servicios'
      fullPath: '/servicios'
      preLoaderRoute: typeof ServiciosImport
      parentRoute: typeof rootRoute
    }
    '/dash': {
      id: '/dash'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashImport
      parentRoute: typeof rootRoute
    }
    '/dash/_authenticated': {
      id: '/dash/_authenticated'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashAuthenticatedImport
      parentRoute: typeof DashRoute
    }
    '/dash/login': {
      id: '/dash/login'
      path: '/login'
      fullPath: '/dash/login'
      preLoaderRoute: typeof DashLoginImport
      parentRoute: typeof DashImport
    }
    '/inmuebles/$id': {
      id: '/inmuebles/$id'
      path: '/inmuebles/$id'
      fullPath: '/inmuebles/$id'
      preLoaderRoute: typeof InmueblesIdImport
      parentRoute: typeof rootRoute
    }
    '/dash/': {
      id: '/dash/'
      path: '/'
      fullPath: '/dash/'
      preLoaderRoute: typeof DashIndexImport
      parentRoute: typeof DashImport
    }
    '/inmuebles/': {
      id: '/inmuebles/'
      path: '/inmuebles'
      fullPath: '/inmuebles'
      preLoaderRoute: typeof InmueblesIndexImport
      parentRoute: typeof rootRoute
    }
    '/dash/_authenticated/inmuebles/$id': {
      id: '/dash/_authenticated/inmuebles/$id'
      path: '/inmuebles/$id'
      fullPath: '/dash/inmuebles/$id'
      preLoaderRoute: typeof DashAuthenticatedInmueblesIdImport
      parentRoute: typeof DashAuthenticatedImport
    }
    '/dash/_authenticated/inmuebles/': {
      id: '/dash/_authenticated/inmuebles/'
      path: '/inmuebles'
      fullPath: '/dash/inmuebles'
      preLoaderRoute: typeof DashAuthenticatedInmueblesIndexImport
      parentRoute: typeof DashAuthenticatedImport
    }
  }
}

// Create and export the route tree

interface DashAuthenticatedRouteChildren {
  DashAuthenticatedInmueblesIdRoute: typeof DashAuthenticatedInmueblesIdRoute
  DashAuthenticatedInmueblesIndexRoute: typeof DashAuthenticatedInmueblesIndexRoute
}

const DashAuthenticatedRouteChildren: DashAuthenticatedRouteChildren = {
  DashAuthenticatedInmueblesIdRoute: DashAuthenticatedInmueblesIdRoute,
  DashAuthenticatedInmueblesIndexRoute: DashAuthenticatedInmueblesIndexRoute,
}

const DashAuthenticatedRouteWithChildren =
  DashAuthenticatedRoute._addFileChildren(DashAuthenticatedRouteChildren)

interface DashRouteChildren {
  DashAuthenticatedRoute: typeof DashAuthenticatedRouteWithChildren
  DashLoginRoute: typeof DashLoginRoute
  DashIndexRoute: typeof DashIndexRoute
}

const DashRouteChildren: DashRouteChildren = {
  DashAuthenticatedRoute: DashAuthenticatedRouteWithChildren,
  DashLoginRoute: DashLoginRoute,
  DashIndexRoute: DashIndexRoute,
}

const DashRouteWithChildren = DashRoute._addFileChildren(DashRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/servicios': typeof ServiciosRoute
  '/dash': typeof DashAuthenticatedRouteWithChildren
  '/dash/login': typeof DashLoginRoute
  '/inmuebles/$id': typeof InmueblesIdRoute
  '/dash/': typeof DashIndexRoute
  '/inmuebles': typeof InmueblesIndexRoute
  '/dash/inmuebles/$id': typeof DashAuthenticatedInmueblesIdRoute
  '/dash/inmuebles': typeof DashAuthenticatedInmueblesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/servicios': typeof ServiciosRoute
  '/dash': typeof DashIndexRoute
  '/dash/login': typeof DashLoginRoute
  '/inmuebles/$id': typeof InmueblesIdRoute
  '/inmuebles': typeof InmueblesIndexRoute
  '/dash/inmuebles/$id': typeof DashAuthenticatedInmueblesIdRoute
  '/dash/inmuebles': typeof DashAuthenticatedInmueblesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/servicios': typeof ServiciosRoute
  '/dash': typeof DashRouteWithChildren
  '/dash/_authenticated': typeof DashAuthenticatedRouteWithChildren
  '/dash/login': typeof DashLoginRoute
  '/inmuebles/$id': typeof InmueblesIdRoute
  '/dash/': typeof DashIndexRoute
  '/inmuebles/': typeof InmueblesIndexRoute
  '/dash/_authenticated/inmuebles/$id': typeof DashAuthenticatedInmueblesIdRoute
  '/dash/_authenticated/inmuebles/': typeof DashAuthenticatedInmueblesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/servicios'
    | '/dash'
    | '/dash/login'
    | '/inmuebles/$id'
    | '/dash/'
    | '/inmuebles'
    | '/dash/inmuebles/$id'
    | '/dash/inmuebles'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/servicios'
    | '/dash'
    | '/dash/login'
    | '/inmuebles/$id'
    | '/inmuebles'
    | '/dash/inmuebles/$id'
    | '/dash/inmuebles'
  id:
    | '__root__'
    | '/'
    | '/servicios'
    | '/dash'
    | '/dash/_authenticated'
    | '/dash/login'
    | '/inmuebles/$id'
    | '/dash/'
    | '/inmuebles/'
    | '/dash/_authenticated/inmuebles/$id'
    | '/dash/_authenticated/inmuebles/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ServiciosRoute: typeof ServiciosRoute
  DashRoute: typeof DashRouteWithChildren
  InmueblesIdRoute: typeof InmueblesIdRoute
  InmueblesIndexRoute: typeof InmueblesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ServiciosRoute: ServiciosRoute,
  DashRoute: DashRouteWithChildren,
  InmueblesIdRoute: InmueblesIdRoute,
  InmueblesIndexRoute: InmueblesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/servicios",
        "/dash",
        "/inmuebles/$id",
        "/inmuebles/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/servicios": {
      "filePath": "servicios.tsx"
    },
    "/dash": {
      "filePath": "dash",
      "children": [
        "/dash/_authenticated",
        "/dash/login",
        "/dash/"
      ]
    },
    "/dash/_authenticated": {
      "filePath": "dash/_authenticated.tsx",
      "parent": "/dash",
      "children": [
        "/dash/_authenticated/inmuebles/$id",
        "/dash/_authenticated/inmuebles/"
      ]
    },
    "/dash/login": {
      "filePath": "dash/login.tsx",
      "parent": "/dash"
    },
    "/inmuebles/$id": {
      "filePath": "inmuebles/$id.tsx"
    },
    "/dash/": {
      "filePath": "dash/index.tsx",
      "parent": "/dash"
    },
    "/inmuebles/": {
      "filePath": "inmuebles/index.tsx"
    },
    "/dash/_authenticated/inmuebles/$id": {
      "filePath": "dash/_authenticated/inmuebles/$id.tsx",
      "parent": "/dash/_authenticated"
    },
    "/dash/_authenticated/inmuebles/": {
      "filePath": "dash/_authenticated/inmuebles/index.tsx",
      "parent": "/dash/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
